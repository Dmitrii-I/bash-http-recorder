# This config file is sourced by the recorder and should adhere to bash syntax

# Log file name
readonly log="bash-http-recorder.log"

# Field separator to separate various information pieces that are printed
# on a single line. Use tabs, as comma's may appear in the HTTP response
readonly s="\t"

# Delay in seconds between HTTP requests
readonly delay=5

# app_name will appear in the name of the data file that we write the data to
readonly app_name="bash-http-recorder"

# The id of the host where recorder is running. Will appear in the 
# name of the data file and will be written into data file as part
# of the message. 
readonly machine_id=$(hostname)

# url for the GET request
readonly url="https://somerandomurl.com"

# script version, as sha256 sum
readonly script_version=$(sha256sum ./bash-http-recorder.sh | cut -d " " -f 1)

# session id
readonly session_id=$(date +"%Y-%m-%d %H:%M:%S.%N")

# maximum lines per data file
readonly max_lines=5

# You may often get same HTTP response as from the previous request,
# perhaps because nothing changed in the meantime. This options deletes
# the duplicate lines after the file has reached max_lines and keeps only
# the oldest line, that is the first line you received from a group of lines.
# When searching for duplicates, we ignore the timestamp of course.
# If you want to keep duplicates, set to FALSE.
readonly del_dup_lines="TRUE"

# gzip the data file after it has reached $max_lines?
# Set to TRUE or FALSE
readonly gzip="TRUE"
